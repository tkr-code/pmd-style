{% import "macros/link.html.twig" as link %}
{% import "macros/breadcrumb.html.twig" as breadcrumb %}

{% extends 'admin/base.html.twig' %}

{% block title %}Ajouter un Fichier{% endblock %}

{% block head %}
  <!-- dropzonejs -->
  <link rel="stylesheet" href="{{ asset('vendor/dropzone/min/dropzone.min.css') }}">
{% endblock %}

{% block foot %}
<!-- dropzonejs -->
<script src="{{ asset('vendor/dropzone/min/dropzone.min.js') }}"></script>
{% endblock %}
{% block breadcrumb %}
	{{ breadcrumb.breadcrumb('Ajouter une fichier',[
{
path:path('app_admin_application_index'),
name:'Gestion des applications'|trans
}
])}}
{% endblock %}
{% block javascripts %}
<script>
// DropzoneJS Demo Code Start
  Dropzone.autoDiscover = false

  // Get the template HTML and remove it from the doumenthe template HTML and remove it from the doument
  var previewNode = document.querySelector("#template")
  previewNode.id = ""
  var previewTemplate = previewNode.parentNode.innerHTML
  previewNode.parentNode.removeChild(previewNode)

  var myDropzone = new Dropzone(document.body, { // Make the whole body a dropzone
    url: "/target-url", // Set the url
    thumbnailWidth: 80,
    thumbnailHeight: 80,
    parallelUploads: 20,
    previewTemplate: previewTemplate,
    autoQueue: false, // Make sure the files aren't queued until manually added
    previewsContainer: "#previews", // Define the container to display the previews
    clickable: ".fileinput-button" // Define the element that should be used as click trigger to select files.
  })

  myDropzone.on("addedfile", function(file) {
    // Hookup the start button
    file.previewElement.querySelector(".start").onclick = function() { myDropzone.enqueueFile(file) }
  })

  // Update the total progress bar
  myDropzone.on("totaluploadprogress", function(progress) {
    document.querySelector("#total-progress .progress-bar").style.width = progress + "%"
  })

  myDropzone.on("sending", function(file) {
    // Show the total progress bar when upload starts
    document.querySelector("#total-progress").style.opacity = "1"
    // And disable the start button
    file.previewElement.querySelector(".start").setAttribute("disabled", "disabled")
  })

  // Hide the total progress bar when nothing's uploading anymore
  myDropzone.on("queuecomplete", function(progress) {
    document.querySelector("#total-progress").style.opacity = "0"
  })

  // Setup the buttons for all transfers
  // The "add files" button doesn't need to be setup because the config
  // `clickable` has already been specified.
  document.querySelector("#actions .start").onclick = function() {
    myDropzone.enqueueFiles(myDropzone.getFilesWithStatus(Dropzone.ADDED))
  }
  document.querySelector("#actions .cancel").onclick = function() {
    myDropzone.removeAllFiles(true)
  }
  // DropzoneJS Demo Code End
</script>
{% endblock %}

{% block body %}
	<div class="card card-outline card-primary">
		<div class="card-header">
			<div class="card-title">Ajouter un fichier</div>
		</div>
		<div class="card-body">
            <h3> Application: {{ application_fichier.application.nom}}</h3>
			{{ include('admin/application_fichier/_form.html.twig') }}
		</div>
	</div>

	{{ link.back(path('app_admin_application_edit',{id:application_fichier.application.id}),'Retour') }}
{% endblock %}
